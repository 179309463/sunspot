module Sunspot
  module Query
    #
    # A dynamic query is a proxy object that implements a subset of the API of
    # the Query class, but wraps a dynamic field definition and thus applies the
    # query components using dynamic field instances.
    #--
    # Dynamic queries do not hold their own state, but rather proxy to the query
    # that generated them, adding components directly to the owning query's
    # internal state.
    #++
    # DynamicQuery instances are publicly generated by the Query#dynamic_query
    # factory method.
    # 
    class DynamicQuery < FieldQuery
      def initialize(dynamic_field, query) #:nodoc:
        @dynamic_field, @query = dynamic_field, query
      end

      def add_sort(sort)
        @query.add_sort(sort)
      end

      def add_component(component)
        @query.add_component(component)
      end
      
      def exclude_instance(instance)
        @query.exclude_instance(instance)
      end

      def dynamic_query(field_name)
        @query.dynamic_query(field_name)
      end

      private

      def build_field(field_name)
        @dynamic_field.build(field_name)
      end
    end
  end
end
